---
- include_role:
    name: andrewrothstein.unarchivedeps

- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: check for installation at {{ dagger_install_exe }}
  become: true
  stat:
    path: '{{ dagger_install_exe }}'
  changed_when: false
  register: dagger_binary
- when: not dagger_binary.stat.exists
  block:
    - name: downloading {{ dagger_url }} to {{ dagger_tmp_archive }}
      become: true
      become_user: root
      get_url:
        url: '{{ dagger_url }}'
        dest: '{{ dagger_tmp_archive }}'
        checksum: '{{ dagger_checksum }}'
        mode: 0644
    - name: mkdir {{ dagger_install_dir }}
      become: true
      become_user: root
      file:
        path: '{{ dagger_install_dir }}'
        state: directory
        mode: 0755
    - name: unarchive {{ dagger_tmp_archive }} into {{ dagger_install_dir }}
      become: true
      become_user: root
      unarchive:
        remote_src: true
        src: '{{ dagger_tmp_archive }}'
        dest: '{{ dagger_install_dir }}'
        creates: '{{ dagger_install_exe }}'
  always:
    - name: rm -f {{ dagger_tmp_archive }}
      become: true
      become_user: root
      file:
        path: '{{ dagger_tmp_archive }}'
        state: absent
- name: linking {{ dagger_link }} to {{ dagger_install_exe }}
  become: true
  become_user: root
  file:
    src: '{{ dagger_install_exe }}'
    dest: '{{ dagger_link }}'
    state: link
